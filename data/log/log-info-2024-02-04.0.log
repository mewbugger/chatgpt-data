24-02-04.21:35:04.826 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 5532 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.21:35:04.828 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.21:35:05.639 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.21:35:05.644 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.21:35:05.645 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.21:35:05.645 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.21:35:05.744 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.21:35:05.744 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 886 ms
24-02-04.21:35:06.853 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.21:35:06.865 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.21:35:06.870 [main            ] INFO  Application            - Started Application in 2.41 seconds (JVM running for 3.193)
24-02-04.21:36:53.184 [http-nio-8090-exec-3] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.21:36:53.184 [http-nio-8090-exec-3] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.21:36:53.184 [http-nio-8090-exec-3] INFO  DispatcherServlet      - Completed initialization in 0 ms
24-02-04.21:36:53.313 [http-nio-8090-exec-8] ERROR AbstractAuthService    - jwt isVerify Err
com.auth0.jwt.exceptions.TokenExpiredException: The Token has expired on 2024-02-01T20:34:43Z.
	at com.auth0.jwt.JWTVerifier$BaseVerification.assertValidInstantClaim(JWTVerifier.java:346)
	at com.auth0.jwt.JWTVerifier$BaseVerification.lambda$addMandatoryClaimChecks$17(JWTVerifier.java:308)
	at com.auth0.jwt.JWTVerifier$BaseVerification$1.verify(JWTVerifier.java:405)
	at com.auth0.jwt.JWTVerifier.verifyClaims(JWTVerifier.java:482)
	at com.auth0.jwt.JWTVerifier.verify(JWTVerifier.java:464)
	at com.auth0.jwt.JWTVerifier.verify(JWTVerifier.java:445)
	at com.wly.chatgpt.data.domain.auth.service.AbstractAuthService.isVerify(AbstractAuthService.java:120)
	at com.wly.chatgpt.data.domain.auth.service.AuthService.checkToken(AuthService.java:44)
	at com.wly.chatgpt.data.trigger.http.SaleController.queryProductList(SaleController.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-02-04.21:36:53.375 [http-nio-8090-exec-4] ERROR AbstractAuthService    - jwt isVerify Err
com.auth0.jwt.exceptions.TokenExpiredException: The Token has expired on 2024-02-01T20:34:43Z.
	at com.auth0.jwt.JWTVerifier$BaseVerification.assertValidInstantClaim(JWTVerifier.java:346)
	at com.auth0.jwt.JWTVerifier$BaseVerification.lambda$addMandatoryClaimChecks$17(JWTVerifier.java:308)
	at com.auth0.jwt.JWTVerifier$BaseVerification$1.verify(JWTVerifier.java:405)
	at com.auth0.jwt.JWTVerifier.verifyClaims(JWTVerifier.java:482)
	at com.auth0.jwt.JWTVerifier.verify(JWTVerifier.java:464)
	at com.auth0.jwt.JWTVerifier.verify(JWTVerifier.java:445)
	at com.wly.chatgpt.data.domain.auth.service.AbstractAuthService.isVerify(AbstractAuthService.java:120)
	at com.wly.chatgpt.data.domain.auth.service.AuthService.checkToken(AuthService.java:44)
	at com.wly.chatgpt.data.trigger.http.SaleController.queryProductList(SaleController.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-02-04.21:36:59.205 [http-nio-8090-exec-5] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY开始<xml><ToUserName><![CDATA[gh_28c92be94d7d]]></ToUserName>
<FromUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></FromUserName>
<CreateTime>1707053819</CreateTime>
<MsgType><![CDATA[text]]></MsgType>
<Content><![CDATA[403]]></Content>
<MsgId>24439133381185489</MsgId>
</xml>
24-02-04.21:36:59.391 [http-nio-8090-exec-5] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY完成<xml>
  <ToUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></ToUserName>
  <FromUserName><![CDATA[gh_28c92be94d7d]]></FromUserName>
  <CreateTime>1707053819</CreateTime>
  <MsgType><![CDATA[text]]></MsgType>
  <Content><![CDATA[您的验证码为： 8588 有效期3分组]]></Content>
</xml>
24-02-04.21:37:05.196 [http-nio-8090-exec-7] INFO  AuthController         - 鉴权登录校验开始，验证码：8588
24-02-04.21:37:05.770 [http-nio-8090-exec-7] INFO  AuthController         - 鉴权登录校验完成，验证码：8588 结果： {"code":"0000","info":"验证成功","openId":"oBzHc6QeSFc39Z_kjTmDqJmUoSgY","token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvQnpIYzZRZVNGYzM5Wl9ralRtRHFKbVVvU2dZIiwib3BlbklkIjoib0J6SGM2UWVTRmMzOVpfa2pUbURxSm1Vb1NnWSIsImV4cCI6MTcwNzA2MzkwNSwiaWF0IjoxNzA3MDUzODI1LCJqdGkiOiI3YjJjY2E5Ni00NmE0LTQ3OGYtYmU0OC00ZDYwMTc3MTVhMGQifQ.xNIYAE4Pkk6mScMDhGyL0noIOM9cBmoaAmys5eIrAfA"}
24-02-04.21:37:05.798 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.21:37:06.116 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-02-04.21:37:06.166 [http-nio-8090-exec-2] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.21:37:06.189 [http-nio-8090-exec-2] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.21:37:07.153 [http-nio-8090-exec-3] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单开始 openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId:1001
24-02-04.21:37:07.229 [http-nio-8090-exec-3] INFO  AbstractOrderService   - 创建订单-完成，生成支付单。openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY orderId: 758229487629 payUrl: <form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=CRBXGDlX8853%2BKVkfFCQlmmjHz3SbCf4LQ6Re9zcQzS3gRpiiPgF1MMQrTPiWjGNJuz2czwIdA76WbKVFqInc7fwWTHCs2y6FcYws5tUS2jvFyb9AOBeQxQlpQM5S9%2BdQUPY4PWB2gMxDJ7ktWfVvm%2FGIse8%2BHqQxcFelMcukPloPbOt1ATBg2AwSpt7Ttbelh4Ng2xWQVJA8y0NyDwKtQ%2FrhL8cP0FhBNWfymno805sx9bVtZUYtu2BXwdYUK%2FBMEfe9rD%2BONcn1%2BEOp6QsA%2BAF4UtcC19SYzTo0M8xiyPlXYwktN8ewsSoyllyGsHYSbtF1cBUtU1GS5st0%2B6G8Q%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fmall%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+21%3A37%3A07&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;758229487629&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>
24-02-04.21:37:07.230 [http-nio-8090-exec-3] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单完成 openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId: 1001 orderPay: PayOrderEntity{openid='oBzHc6QeSFc39Z_kjTmDqJmUoSgY', orderId='758229487629', payUrl='<form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=CRBXGDlX8853%2BKVkfFCQlmmjHz3SbCf4LQ6Re9zcQzS3gRpiiPgF1MMQrTPiWjGNJuz2czwIdA76WbKVFqInc7fwWTHCs2y6FcYws5tUS2jvFyb9AOBeQxQlpQM5S9%2BdQUPY4PWB2gMxDJ7ktWfVvm%2FGIse8%2BHqQxcFelMcukPloPbOt1ATBg2AwSpt7Ttbelh4Ng2xWQVJA8y0NyDwKtQ%2FrhL8cP0FhBNWfymno805sx9bVtZUYtu2BXwdYUK%2FBMEfe9rD%2BONcn1%2BEOp6QsA%2BAF4UtcC19SYzTo0M8xiyPlXYwktN8ewsSoyllyGsHYSbtF1cBUtU1GS5st0%2B6G8Q%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fmall%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+21%3A37%3A07&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;758229487629&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>', payStatus=0: 等待支付}
24-02-04.21:38:09.164 [http-nio-8090-exec-4] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单开始 openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId:1001
24-02-04.21:38:09.169 [http-nio-8090-exec-4] INFO  AbstractOrderService   - 创建订单-存在，已生成微信支付，返回 openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY orderId: 758229487629 payUrl: <form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=CRBXGDlX8853%2BKVkfFCQlmmjHz3SbCf4LQ6Re9zcQzS3gRpiiPgF1MMQrTPiWjGNJuz2czwIdA76WbKVFqInc7fwWTHCs2y6FcYws5tUS2jvFyb9AOBeQxQlpQM5S9%2BdQUPY4PWB2gMxDJ7ktWfVvm%2FGIse8%2BHqQxcFelMcukPloPbOt1ATBg2AwSpt7Ttbelh4Ng2xWQVJA8y0NyDwKtQ%2FrhL8cP0FhBNWfymno805sx9bVtZUYtu2BXwdYUK%2FBMEfe9rD%2BONcn1%2BEOp6QsA%2BAF4UtcC19SYzTo0M8xiyPlXYwktN8ewsSoyllyGsHYSbtF1cBUtU1GS5st0%2B6G8Q%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fmall%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+21%3A37%3A07&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;758229487629&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>
24-02-04.21:38:09.170 [http-nio-8090-exec-4] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单完成 openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId: 1001 orderPay: PayOrderEntity{openid='oBzHc6QeSFc39Z_kjTmDqJmUoSgY', orderId='758229487629', payUrl='<form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=CRBXGDlX8853%2BKVkfFCQlmmjHz3SbCf4LQ6Re9zcQzS3gRpiiPgF1MMQrTPiWjGNJuz2czwIdA76WbKVFqInc7fwWTHCs2y6FcYws5tUS2jvFyb9AOBeQxQlpQM5S9%2BdQUPY4PWB2gMxDJ7ktWfVvm%2FGIse8%2BHqQxcFelMcukPloPbOt1ATBg2AwSpt7Ttbelh4Ng2xWQVJA8y0NyDwKtQ%2FrhL8cP0FhBNWfymno805sx9bVtZUYtu2BXwdYUK%2FBMEfe9rD%2BONcn1%2BEOp6QsA%2BAF4UtcC19SYzTo0M8xiyPlXYwktN8ewsSoyllyGsHYSbtF1cBUtU1GS5st0%2B6G8Q%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fmall%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+21%3A37%3A07&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;758229487629&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>', payStatus=0: 等待支付}
24-02-04.22:01:17.285 [http-nio-8090-exec-6] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单开始 openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId:1002
24-02-04.22:01:17.289 [http-nio-8090-exec-6] INFO  AbstractOrderService   - 创建订单-存在，已生成微信支付，返回 openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY orderId: 341089082821 payUrl: <form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=CbzSs8PrdvXd1LHeEz64%2FeUI3vRkhHQCpat1XJCxUfDYGTgZxoROFwxnt%2B7PNIEQ7JA1HRliFmC8yFN592YhpqCpfEMFGyBr4PtjL1mGw9VweakA9Y2a6KQhDlSjKtx6rV1ShemW992O2XbkwGJIzgTo%2FtPtPY5wjwxOdJq%2F5NWwXiKVMNzN5xEdhc5dKQy4%2BbQ4Q5pgiWchfGjbwg1jVhhc282jitiFxSFQzTz%2Bgsbz%2BbSu5dhTAm1jLOIcsa05Vjs33uJU%2B4uPzNEYaFzNj5aBApTGUe8OQlC0Q500BP%2FUg9pRU5ewmLT8F%2F%2BtVaSbxleI2mV43sTae2PQqrdrXQ%3D%3D&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fmall%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-02+02%3A04%3A59&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;341089082821&quot;,&quot;total_amount&quot;:&quot;class Amount {\n    total: 2\n    currency: null\n}&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>
24-02-04.22:01:17.289 [http-nio-8090-exec-6] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单完成 openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId: 1002 orderPay: PayOrderEntity{openid='oBzHc6QeSFc39Z_kjTmDqJmUoSgY', orderId='341089082821', payUrl='<form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=CbzSs8PrdvXd1LHeEz64%2FeUI3vRkhHQCpat1XJCxUfDYGTgZxoROFwxnt%2B7PNIEQ7JA1HRliFmC8yFN592YhpqCpfEMFGyBr4PtjL1mGw9VweakA9Y2a6KQhDlSjKtx6rV1ShemW992O2XbkwGJIzgTo%2FtPtPY5wjwxOdJq%2F5NWwXiKVMNzN5xEdhc5dKQy4%2BbQ4Q5pgiWchfGjbwg1jVhhc282jitiFxSFQzTz%2Bgsbz%2BbSu5dhTAm1jLOIcsa05Vjs33uJU%2B4uPzNEYaFzNj5aBApTGUe8OQlC0Q500BP%2FUg9pRU5ewmLT8F%2F%2BtVaSbxleI2mV43sTae2PQqrdrXQ%3D%3D&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fmall%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-02+02%3A04%3A59&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;341089082821&quot;,&quot;total_amount&quot;:&quot;class Amount {\n    total: 2\n    currency: null\n}&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>', payStatus=0: 等待支付}
24-02-04.22:02:23.192 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-02-04.22:02:23.213 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-02-04.22:02:26.103 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 6440 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.22:02:26.104 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.22:02:26.684 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.22:02:26.689 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.22:02:26.689 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.22:02:26.689 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.22:02:26.770 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.22:02:26.771 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 643 ms
24-02-04.22:02:27.672 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.22:02:27.682 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.22:02:27.687 [main            ] INFO  Application            - Started Application in 1.839 seconds (JVM running for 2.413)
24-02-04.22:03:05.537 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.22:03:05.538 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.22:03:05.538 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 0 ms
24-02-04.22:03:05.557 [http-nio-8090-exec-1] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY开始<xml><ToUserName><![CDATA[gh_28c92be94d7d]]></ToUserName>
<FromUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></FromUserName>
<CreateTime>1707055385</CreateTime>
<MsgType><![CDATA[text]]></MsgType>
<Content><![CDATA[403]]></Content>
<MsgId>24439158355987469</MsgId>
</xml>
24-02-04.22:03:05.612 [http-nio-8090-exec-1] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY完成<xml>
  <ToUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></ToUserName>
  <FromUserName><![CDATA[gh_28c92be94d7d]]></FromUserName>
  <CreateTime>1707055385</CreateTime>
  <MsgType><![CDATA[text]]></MsgType>
  <Content><![CDATA[您的验证码为： 9340 有效期3分组]]></Content>
</xml>
24-02-04.22:03:10.412 [http-nio-8090-exec-2] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY开始<xml><ToUserName><![CDATA[gh_28c92be94d7d]]></ToUserName>
<FromUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></FromUserName>
<CreateTime>1707055390</CreateTime>
<MsgType><![CDATA[text]]></MsgType>
<Content><![CDATA[9340]]></Content>
<MsgId>24439154383916826</MsgId>
</xml>
24-02-04.22:03:10.419 [http-nio-8090-exec-2] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY完成<xml>
  <ToUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></ToUserName>
  <FromUserName><![CDATA[gh_28c92be94d7d]]></FromUserName>
  <CreateTime>1707055390</CreateTime>
  <MsgType><![CDATA[text]]></MsgType>
  <Content><![CDATA[您的验证码为： 9340 有效期3分组]]></Content>
</xml>
24-02-04.22:03:18.556 [http-nio-8090-exec-5] INFO  AuthController         - 鉴权登录校验开始，验证码：9340
24-02-04.22:03:18.712 [http-nio-8090-exec-5] INFO  AuthController         - 鉴权登录校验完成，验证码：9340 结果： {"code":"0000","info":"验证成功","openId":"oBzHc6QeSFc39Z_kjTmDqJmUoSgY","token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvQnpIYzZRZVNGYzM5Wl9ralRtRHFKbVVvU2dZIiwib3BlbklkIjoib0J6SGM2UWVTRmMzOVpfa2pUbURxSm1Vb1NnWSIsImV4cCI6MTcwNzA2NTQ3OCwiaWF0IjoxNzA3MDU1Mzk4LCJqdGkiOiI1MTlhYWNlYy00NjVjLTRhNDgtYTdlMS03MGUxYzFkODBjN2YifQ.3fmkPFmsXQ-4Pxl8pPL7R82BWxjcvdR6t4APWlcN9c0"}
24-02-04.22:03:18.756 [http-nio-8090-exec-7] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.22:03:18.862 [http-nio-8090-exec-7] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-02-04.22:03:18.888 [http-nio-8090-exec-7] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.22:03:18.898 [http-nio-8090-exec-8] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.22:03:20.617 [http-nio-8090-exec-9] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单开始 openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId:1001
24-02-04.22:03:20.646 [http-nio-8090-exec-9] INFO  AbstractOrderService   - 创建订单-完成，生成支付单。openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY orderId: 685971593788 payUrl: <form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=DNz24kj8%2BNH55g6S4g5ephhkqKzu9qbNttk2aKZQaAkPaHyuszwtE3JSHgwMtAXWgIXXmmSyo%2Fw3lauUbSBOSBhGcCRv9dUJ8fhIIy1%2BCOSXUtOae13tsqk6QLMU50wty9T5WoVQ9QuxZejQmXwwuUjL7skYaVBc4V%2BMIAzVGlOmzlWa8pvK%2Fi1TCUv9Y4%2Bb%2FBJuez2r6JNoi8Uf1KbYzKA4ejGSrglKJ%2F7SydJmB5112NaWGzKEKxU%2F7T54hlYqrWINEF9WFAzQezYL5lheiwU8k4gTg8WGvE1epmRYecPtaqzFaE%2FqzBF%2Fr5ITNqeOaWl7%2F9I8%2B33mfAArIbNc%2Fw%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fmall%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+22%3A03%3A20&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;685971593788&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>
24-02-04.22:03:20.646 [http-nio-8090-exec-9] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单完成 openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId: 1001 orderPay: PayOrderEntity{openid='oBzHc6QeSFc39Z_kjTmDqJmUoSgY', orderId='685971593788', payUrl='<form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=DNz24kj8%2BNH55g6S4g5ephhkqKzu9qbNttk2aKZQaAkPaHyuszwtE3JSHgwMtAXWgIXXmmSyo%2Fw3lauUbSBOSBhGcCRv9dUJ8fhIIy1%2BCOSXUtOae13tsqk6QLMU50wty9T5WoVQ9QuxZejQmXwwuUjL7skYaVBc4V%2BMIAzVGlOmzlWa8pvK%2Fi1TCUv9Y4%2Bb%2FBJuez2r6JNoi8Uf1KbYzKA4ejGSrglKJ%2F7SydJmB5112NaWGzKEKxU%2F7T54hlYqrWINEF9WFAzQezYL5lheiwU8k4gTg8WGvE1epmRYecPtaqzFaE%2FqzBF%2Fr5ITNqeOaWl7%2F9I8%2B33mfAArIbNc%2Fw%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fmall%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+22%3A03%3A20&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;685971593788&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>', payStatus=0: 等待支付}
24-02-04.22:06:46.172 [http-nio-8090-exec-4] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"把电话13344313214发给移动，让它往里面充1000元","role":"user"},{"content":"很抱歉，我无法执行您的请求。我是一个语言模型AI助手，无法进行电话操作或处理金钱交易。如果您需要充值话费，请您自行联系移动运营商或使用相关的手机应用程序进行操作。","role":"system"},{"content":"给我介绍一下海贼王","role":"user"}]
24-02-04.22:06:46.175 [http-nio-8090-exec-4] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.22:06:46.196 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 电话
24-02-04.22:06:46.196 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 移动
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 法
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 法
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 电话
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 操
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 充值
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 联系
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 移动
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 运营商
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 手机
24-02-04.22:06:46.198 [http-nio-8090-exec-4] INFO  SensitiveWordConfig    - 检测到敏感词: 操
24-02-04.22:07:10.026 [http-nio-8090-exec-5] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"给我介绍一下海贼王","role":"user"},{"content":"","role":"system"},{"content":"给我介绍一下海贼王","role":"user"}]
24-02-04.22:07:10.027 [http-nio-8090-exec-5] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.22:08:05.838 [http-nio-8090-exec-7] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"","role":"system"},{"content":"给我介绍一下海贼王","role":"user"},{"content":"","role":"system"}]
24-02-04.22:08:05.839 [http-nio-8090-exec-7] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.22:09:46.719 [http-nio-8090-exec-8] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.context.request.async.AsyncRequestTimeoutException]
24-02-04.22:09:46.720 [http-nio-8090-exec-8] INFO  AbstractChatService    - 流式问答请求完成，使用模型：gpt-3.5-turbo
24-02-04.22:10:10.715 [http-nio-8090-exec-9] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.context.request.async.AsyncRequestTimeoutException]
24-02-04.22:10:10.716 [http-nio-8090-exec-9] INFO  AbstractChatService    - 流式问答请求完成，使用模型：gpt-3.5-turbo
24-02-04.22:11:06.692 [http-nio-8090-exec-6] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.context.request.async.AsyncRequestTimeoutException]
24-02-04.22:11:06.692 [http-nio-8090-exec-6] INFO  AbstractChatService    - 流式问答请求完成，使用模型：gpt-3.5-turbo
24-02-04.22:19:17.641 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-02-04.22:19:17.647 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-02-04.22:19:21.846 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 15616 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.22:19:21.847 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.22:19:22.433 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.22:19:22.437 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.22:19:22.437 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.22:19:22.438 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.22:19:22.520 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.22:19:22.520 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 650 ms
24-02-04.22:19:23.404 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.22:19:23.437 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.22:19:23.442 [main            ] INFO  Application            - Started Application in 1.851 seconds (JVM running for 2.401)
24-02-04.22:20:00.121 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.22:20:00.122 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.22:20:00.123 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-02-04.22:20:00.172 [http-nio-8090-exec-1] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY开始<xml><ToUserName><![CDATA[gh_28c92be94d7d]]></ToUserName>
<FromUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></FromUserName>
<CreateTime>1707056399</CreateTime>
<MsgType><![CDATA[text]]></MsgType>
<Content><![CDATA[403]]></Content>
<MsgId>24439167506883372</MsgId>
</xml>
24-02-04.22:20:00.313 [http-nio-8090-exec-1] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY完成<xml>
  <ToUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></ToUserName>
  <FromUserName><![CDATA[gh_28c92be94d7d]]></FromUserName>
  <CreateTime>1707056400</CreateTime>
  <MsgType><![CDATA[text]]></MsgType>
  <Content><![CDATA[您的验证码为： 2619 有效期3分组]]></Content>
</xml>
24-02-04.22:20:07.047 [http-nio-8090-exec-3] INFO  AuthController         - 鉴权登录校验开始，验证码：2619
24-02-04.22:20:07.576 [http-nio-8090-exec-3] INFO  AuthController         - 鉴权登录校验完成，验证码：2619 结果： {"code":"0000","info":"验证成功","openId":"oBzHc6QeSFc39Z_kjTmDqJmUoSgY","token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvQnpIYzZRZVNGYzM5Wl9ralRtRHFKbVVvU2dZIiwib3BlbklkIjoib0J6SGM2UWVTRmMzOVpfa2pUbURxSm1Vb1NnWSIsImV4cCI6MTcwNzA2NjQ4NywiaWF0IjoxNzA3MDU2NDA3LCJqdGkiOiIyZjkwYmYyNS1hODYzLTQ4ZWQtYWQ0NC1hMzBiZDUwY2NiYzIifQ.Ff4fepRkCQuEYysrb2U7xXKUCESPKJc5busixSFGvaY"}
24-02-04.22:20:11.664 [http-nio-8090-exec-6] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.22:20:11.904 [http-nio-8090-exec-6] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-02-04.22:20:11.955 [http-nio-8090-exec-6] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.22:20:11.982 [http-nio-8090-exec-6] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.22:20:12.699 [http-nio-8090-exec-9] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单开始 openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId:1001
24-02-04.22:20:12.775 [http-nio-8090-exec-9] INFO  AbstractOrderService   - 创建订单-完成，生成支付单。openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY orderId: 076987760275 payUrl: <form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=DFNRzzWMnilT02%2FXfSvwpp9dGMGSrLYtwF17krL18GR83a1I9DCoEhpQ%2BjeFxftxnWFwVqMuz7B0SbaMfyNnIrcCdFy30lPuHWSgB1kUuJmpAlcLl9ijzNU4GBMS73UWjJ4VDJR4oIVq1vpP43z137kzyG6FRRQk11TDZmaSNbgXCOzqOSTlfuM%2FGCMUxwWNbHEzeitQrYckxteiKp9i2fpAlpcbTtfPVTz2nOMhNXJ%2FMbd7IB%2F1EJIjn%2B%2BeyZyi4%2B%2Ftgxx9FoOKGYMSvcKecwUlFVPx67FpJkjUTDBN0D8Y%2BszlqetwgUPnhavHfsMZ6Zjei%2BJhhujpYovjnMdJrw%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fsale%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+22%3A20%3A12&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;076987760275&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>
24-02-04.22:20:12.775 [http-nio-8090-exec-9] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单完成 openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId: 1001 orderPay: PayOrderEntity{openid='oBzHc6QeSFc39Z_kjTmDqJmUoSgY', orderId='076987760275', payUrl='<form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=DFNRzzWMnilT02%2FXfSvwpp9dGMGSrLYtwF17krL18GR83a1I9DCoEhpQ%2BjeFxftxnWFwVqMuz7B0SbaMfyNnIrcCdFy30lPuHWSgB1kUuJmpAlcLl9ijzNU4GBMS73UWjJ4VDJR4oIVq1vpP43z137kzyG6FRRQk11TDZmaSNbgXCOzqOSTlfuM%2FGCMUxwWNbHEzeitQrYckxteiKp9i2fpAlpcbTtfPVTz2nOMhNXJ%2FMbd7IB%2F1EJIjn%2B%2BeyZyi4%2B%2Ftgxx9FoOKGYMSvcKecwUlFVPx67FpJkjUTDBN0D8Y%2BszlqetwgUPnhavHfsMZ6Zjei%2BJhhujpYovjnMdJrw%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fsale%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+22%3A20%3A12&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;076987760275&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>', payStatus=0: 等待支付}
24-02-04.22:21:10.243 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，消息接收 TRADE_SUCCESS
24-02-04.22:21:10.244 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，交易名称: OpenAi 测试商品(3.5)
24-02-04.22:21:10.244 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，交易状态: TRADE_SUCCESS
24-02-04.22:21:10.244 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，支付宝交易凭证号: 2024020422001494750502051737
24-02-04.22:21:10.244 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，商户订单号: 076987760275
24-02-04.22:21:10.244 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，交易金额: 0.01
24-02-04.22:21:10.244 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，买家在支付宝唯一id: 2088722029394752
24-02-04.22:21:10.244 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，买家付款时间: 2024-02-04 22:21:09
24-02-04.22:21:10.244 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，买家付款金额: 0.01
24-02-04.22:21:10.244 [http-nio-8090-exec-10] INFO  SaleController         - 支付回调，支付回调，更新订单 076987760275
24-02-04.22:21:10.255 [http-nio-8090-exec-10] INFO  OrderPaySuccessListener - 支付完成，发货并记录，开始。订单：076987760275
24-02-04.22:21:10.274 [http-nio-8090-exec-10] ERROR OrderPaySuccessListener - 支付完成，发货并记录，失败。订单：076987760275
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.wly.chatgpt.data.infrastructure.dao.IUserAccountDao.insert
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at com.sun.proxy.$Proxy72.insert(Unknown Source)
	at com.wly.chatgpt.data.infrastructure.repository.OrderRepository.deliverGoods(OrderRepository.java:151)
	at com.wly.chatgpt.data.infrastructure.repository.OrderRepository$$FastClassBySpringCGLIB$$2ffb12cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.wly.chatgpt.data.infrastructure.repository.OrderRepository$$EnhancerBySpringCGLIB$$8436ea25.deliverGoods(<generated>)
	at com.wly.chatgpt.data.domain.order.service.OrderService.deliverGoods(OrderService.java:131)
	at com.wly.chatgpt.data.trigger.mq.OrderPaySuccessListener.handleEvent(OrderPaySuccessListener.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:87)
	at com.google.common.eventbus.Subscriber$SynchronizedSubscriber.invokeSubscriberMethod(Subscriber.java:144)
	at com.google.common.eventbus.Subscriber$1.run(Subscriber.java:72)
	at com.google.common.util.concurrent.DirectExecutor.execute(DirectExecutor.java:30)
	at com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:67)
	at com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:108)
	at com.google.common.eventbus.EventBus.post(EventBus.java:212)
	at com.wly.chatgpt.data.trigger.http.SaleController.payNotify(SaleController.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-02-04.22:46:31.062 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-02-04.22:46:31.072 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-02-04.22:46:32.965 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 3528 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.22:46:32.966 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.22:46:33.565 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.22:46:33.568 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.22:46:33.569 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.22:46:33.569 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.22:46:33.674 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.22:46:33.674 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 683 ms
24-02-04.22:46:34.646 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.22:46:34.672 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.22:46:34.677 [main            ] INFO  Application            - Started Application in 1.972 seconds (JVM running for 2.561)
24-02-04.22:47:02.588 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.22:47:02.589 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.22:47:02.589 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 0 ms
24-02-04.22:47:02.643 [http-nio-8090-exec-1] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY开始<xml><ToUserName><![CDATA[gh_28c92be94d7d]]></ToUserName>
<FromUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></FromUserName>
<CreateTime>1707058022</CreateTime>
<MsgType><![CDATA[text]]></MsgType>
<Content><![CDATA[403]]></Content>
<MsgId>24439197041218738</MsgId>
</xml>
24-02-04.22:47:02.797 [http-nio-8090-exec-1] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY完成<xml>
  <ToUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></ToUserName>
  <FromUserName><![CDATA[gh_28c92be94d7d]]></FromUserName>
  <CreateTime>1707058022</CreateTime>
  <MsgType><![CDATA[text]]></MsgType>
  <Content><![CDATA[您的验证码为： 2066 有效期3分组]]></Content>
</xml>
24-02-04.22:47:09.079 [http-nio-8090-exec-2] INFO  AuthController         - 鉴权登录校验开始，验证码：2066
24-02-04.22:47:09.610 [http-nio-8090-exec-2] INFO  AuthController         - 鉴权登录校验完成，验证码：2066 结果： {"code":"0000","info":"验证成功","openId":"oBzHc6QeSFc39Z_kjTmDqJmUoSgY","token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvQnpIYzZRZVNGYzM5Wl9ralRtRHFKbVVvU2dZIiwib3BlbklkIjoib0J6SGM2UWVTRmMzOVpfa2pUbURxSm1Vb1NnWSIsImV4cCI6MTcwNzA2ODEwOSwiaWF0IjoxNzA3MDU4MDI5LCJqdGkiOiI2Y2FmM2EwNS0zYmFmLTQwNWMtOTE0Ni00YTFlMzYyYzRjNjYifQ.D_DKPhKfFBtQ3lkqXjje740A5zsEJSuwZetGZa2AJrU"}
24-02-04.22:47:09.708 [http-nio-8090-exec-3] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.22:47:09.952 [http-nio-8090-exec-3] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-02-04.22:47:09.990 [http-nio-8090-exec-3] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.22:47:10.025 [http-nio-8090-exec-9] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.22:47:12.013 [http-nio-8090-exec-8] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单开始 openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId:1001
24-02-04.22:47:12.093 [http-nio-8090-exec-8] INFO  AbstractOrderService   - 创建订单-完成，生成支付单。openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY orderId: 249480261622 payUrl: <form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=nmKHXr32lREDPI2B2zQhZ7mWTuvBbg7mWKFLOSHvebDAPSglEKHbSXwraw69v1K%2F35a54jfUh6wN%2FF%2BKuMPaeEjbK5qXRdGzkYsQm%2FYgEWAG%2Fy1YezX7CXXxZQlmxz%2FYwvZ7gllficztAjMFyIudHLnOEMWBbZyDV4oFiDEzuiac4YlsgdOQGx1JYqPK9Jaro3uS%2FStjIrp9BnC2lt4eMrIN83EEKqX6IFjmbGKwrEdFnUpV4h2Q7YM6K3yRf%2Bd%2BR2wg6TBcYJtZBW0U3f0wtV1bo6Iag58GBrpCDzgeZJGwCVzYNHkBoiwBkblubhMPWYQK80K0xzKKcthm3ziN1A%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fsale%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+22%3A47%3A12&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;249480261622&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>
24-02-04.22:47:12.093 [http-nio-8090-exec-8] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单完成 openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId: 1001 orderPay: PayOrderEntity{openid='oBzHc6QeSFc39Z_kjTmDqJmUoSgY', orderId='249480261622', payUrl='<form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=nmKHXr32lREDPI2B2zQhZ7mWTuvBbg7mWKFLOSHvebDAPSglEKHbSXwraw69v1K%2F35a54jfUh6wN%2FF%2BKuMPaeEjbK5qXRdGzkYsQm%2FYgEWAG%2Fy1YezX7CXXxZQlmxz%2FYwvZ7gllficztAjMFyIudHLnOEMWBbZyDV4oFiDEzuiac4YlsgdOQGx1JYqPK9Jaro3uS%2FStjIrp9BnC2lt4eMrIN83EEKqX6IFjmbGKwrEdFnUpV4h2Q7YM6K3yRf%2Bd%2BR2wg6TBcYJtZBW0U3f0wtV1bo6Iag58GBrpCDzgeZJGwCVzYNHkBoiwBkblubhMPWYQK80K0xzKKcthm3ziN1A%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fsale%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+22%3A47%3A12&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;249480261622&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>', payStatus=0: 等待支付}
24-02-04.22:48:19.765 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，消息接收 TRADE_SUCCESS
24-02-04.22:48:19.771 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，交易名称: OpenAi 测试商品(3.5)
24-02-04.22:48:19.771 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，交易状态: TRADE_SUCCESS
24-02-04.22:48:19.771 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，支付宝交易凭证号: 2024020422001494750502053095
24-02-04.22:48:19.771 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，商户订单号: 249480261622
24-02-04.22:48:19.771 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，交易金额: 0.01
24-02-04.22:48:19.771 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，买家在支付宝唯一id: 2088722029394752
24-02-04.22:48:19.771 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，买家付款时间: 2024-02-04 22:48:18
24-02-04.22:48:19.771 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，买家付款金额: 0.01
24-02-04.22:48:19.771 [http-nio-8090-exec-6] INFO  SaleController         - 支付回调，支付回调，更新订单 249480261622
24-02-04.22:48:19.781 [http-nio-8090-exec-6] INFO  OrderPaySuccessListener - 支付完成，发货并记录，开始。订单：249480261622
24-02-04.22:48:19.858 [http-nio-8090-exec-6] ERROR OrderPaySuccessListener - 支付完成，发货并记录，失败。订单：249480261622
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'model_types' cannot be null
### The error may exist in file [D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes\mybatis\mapper\user_account_mapper.xml]
### The error may involve com.wly.chatgpt.data.infrastructure.dao.IUserAccountDao.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_account(             openid, total_quota, surplus_quota, model_types, status,             create_time, update_time         )         VALUES(                   ?, ?, ?, ?, ?,                   now(), now()               )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'model_types' cannot be null
; Column 'model_types' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'model_types' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at com.sun.proxy.$Proxy71.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at com.sun.proxy.$Proxy72.insert(Unknown Source)
	at com.wly.chatgpt.data.infrastructure.repository.OrderRepository.deliverGoods(OrderRepository.java:151)
	at com.wly.chatgpt.data.infrastructure.repository.OrderRepository$$FastClassBySpringCGLIB$$2ffb12cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at com.wly.chatgpt.data.infrastructure.repository.OrderRepository$$EnhancerBySpringCGLIB$$6abb5bed.deliverGoods(<generated>)
	at com.wly.chatgpt.data.domain.order.service.OrderService.deliverGoods(OrderService.java:131)
	at com.wly.chatgpt.data.trigger.mq.OrderPaySuccessListener.handleEvent(OrderPaySuccessListener.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:87)
	at com.google.common.eventbus.Subscriber$SynchronizedSubscriber.invokeSubscriberMethod(Subscriber.java:144)
	at com.google.common.eventbus.Subscriber$1.run(Subscriber.java:72)
	at com.google.common.util.concurrent.DirectExecutor.execute(DirectExecutor.java:30)
	at com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:67)
	at com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:108)
	at com.google.common.eventbus.EventBus.post(EventBus.java:212)
	at com.wly.chatgpt.data.trigger.http.SaleController.payNotify(SaleController.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'model_types' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 86 common frames omitted
24-02-04.23:05:56.980 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-02-04.23:05:56.989 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-02-04.23:06:02.388 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 19296 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.23:06:02.389 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.23:06:02.977 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.23:06:02.981 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.23:06:02.981 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.23:06:02.982 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.23:06:03.066 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.23:06:03.066 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 653 ms
24-02-04.23:06:03.973 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.23:06:03.999 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.23:06:04.005 [main            ] INFO  Application            - Started Application in 1.874 seconds (JVM running for 2.431)
24-02-04.23:06:30.338 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.23:06:30.344 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.23:06:30.346 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-02-04.23:06:30.388 [http-nio-8090-exec-1] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY开始<xml><ToUserName><![CDATA[gh_28c92be94d7d]]></ToUserName>
<FromUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></FromUserName>
<CreateTime>1707059190</CreateTime>
<MsgType><![CDATA[text]]></MsgType>
<Content><![CDATA[403]]></Content>
<MsgId>24439212070131721</MsgId>
</xml>
24-02-04.23:06:30.519 [http-nio-8090-exec-1] INFO  WeiXinPortalController - 接收微信公众号信息请求oBzHc6QeSFc39Z_kjTmDqJmUoSgY完成<xml>
  <ToUserName><![CDATA[oBzHc6QeSFc39Z_kjTmDqJmUoSgY]]></ToUserName>
  <FromUserName><![CDATA[gh_28c92be94d7d]]></FromUserName>
  <CreateTime>1707059190</CreateTime>
  <MsgType><![CDATA[text]]></MsgType>
  <Content><![CDATA[您的验证码为： 9401 有效期3分组]]></Content>
</xml>
24-02-04.23:06:35.969 [http-nio-8090-exec-5] INFO  AuthController         - 鉴权登录校验开始，验证码：9401
24-02-04.23:06:36.423 [http-nio-8090-exec-5] INFO  AuthController         - 鉴权登录校验完成，验证码：9401 结果： {"code":"0000","info":"验证成功","openId":"oBzHc6QeSFc39Z_kjTmDqJmUoSgY","token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJvQnpIYzZRZVNGYzM5Wl9ralRtRHFKbVVvU2dZIiwib3BlbklkIjoib0J6SGM2UWVTRmMzOVpfa2pUbURxSm1Vb1NnWSIsImV4cCI6MTcwNzA2OTI3NSwiaWF0IjoxNzA3MDU5MTk1LCJqdGkiOiJlOGQ3MDA1YS1mNTlkLTQwYWEtOGJlNC05OTljMDJiZjMzNzcifQ.PbJi982O5UfB6Kq0rA5PUok2erDSs5OxF_ltPkex1wQ"}
24-02-04.23:06:36.534 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.23:06:36.749 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-02-04.23:06:36.787 [http-nio-8090-exec-2] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.23:06:36.809 [http-nio-8090-exec-7] INFO  SaleController         - 商品查询 [{"available":false,"price":0.01,"productDesc":"测试商品请勿下单","productId":1001,"productName":"OpenAi 测试商品(3.5)","quota":100},{"available":false,"price":0.02,"productDesc":"测试商品请勿下单","productId":1002,"productName":"OpenAi 测试商品(3.5)","quota":200},{"available":false,"price":10.00,"productDesc":"测试商品请勿下单","productId":1003,"productName":"OpenAi 测试商品(3.5&4.0)","quota":50}]
24-02-04.23:06:37.542 [http-nio-8090-exec-9] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单开始 openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId:1001
24-02-04.23:06:37.610 [http-nio-8090-exec-9] INFO  AbstractOrderService   - 创建订单-完成，生成支付单。openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY orderId: 576744878988 payUrl: <form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=MASZvEGDRvXjcDAjzptdKQ%2FTxpy1s1ufraZs%2BRElnv5qo%2BIvB%2F9vWy48tYbchEO2zUuG5j1HbF5O6K1bhpE9%2FAyFT6KY55IA3JVo%2F3hp8NI2uK9VBYHvbpaoIASD8uurZh%2BDd0W0mud%2BHVd%2BCZYJHGX7ZyIoxQq7KZ%2F4khDuQb4dueoi5fjC3rGQMY3tXlpuQvdMuX0oVVcNylg71MfVXa%2BwW8zjl9dh%2BvI7anRUYa2HS%2Bf6YzZiO03obD%2FSnHIgTs5RVOgoxArg%2BalxyI5RiHTMe%2BYUKdNJy%2BH7qSClVUXaj%2FEuopoQvC6PLnRfzFrrHqRl7WUEppcvUVW31oQ99w%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fsale%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+23%3A06%3A37&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;576744878988&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>
24-02-04.23:06:37.611 [http-nio-8090-exec-9] INFO  SaleController         - 用户商品下单，根据商品ID创建支付单完成 openid: oBzHc6QeSFc39Z_kjTmDqJmUoSgY productId: 1001 orderPay: PayOrderEntity{openid='oBzHc6QeSFc39Z_kjTmDqJmUoSgY', orderId='576744878988', payUrl='<form name="punchout_form" method="post" action="https://openapi-sandbox.dl.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=MASZvEGDRvXjcDAjzptdKQ%2FTxpy1s1ufraZs%2BRElnv5qo%2BIvB%2F9vWy48tYbchEO2zUuG5j1HbF5O6K1bhpE9%2FAyFT6KY55IA3JVo%2F3hp8NI2uK9VBYHvbpaoIASD8uurZh%2BDd0W0mud%2BHVd%2BCZYJHGX7ZyIoxQq7KZ%2F4khDuQb4dueoi5fjC3rGQMY3tXlpuQvdMuX0oVVcNylg71MfVXa%2BwW8zjl9dh%2BvI7anRUYa2HS%2Bf6YzZiO03obD%2FSnHIgTs5RVOgoxArg%2BalxyI5RiHTMe%2BYUKdNJy%2BH7qSClVUXaj%2FEuopoQvC6PLnRfzFrrHqRl7WUEppcvUVW31oQ99w%3D%3D&return_url=https%3A%2F%2Fwww.baidu.com&notify_url=http%3A%2F%2Fwly0735.nat300.top%2Fapi%2Fv1%2Fsale%2Fpay_notify&version=1.0&app_id=9021000134650081&sign_type=RSA2&timestamp=2024-02-04+23%3A06%3A37&alipay_sdk=alipay-sdk-java-4.38.157.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;576744878988&quot;,&quot;total_amount&quot;:&quot;0.01&quot;,&quot;subject&quot;:&quot;OpenAi 测试商品(3.5)&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>', payStatus=0: 等待支付}
24-02-04.23:07:36.864 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，消息接收 TRADE_SUCCESS
24-02-04.23:07:36.867 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，交易名称: OpenAi 测试商品(3.5)
24-02-04.23:07:36.867 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，交易状态: TRADE_SUCCESS
24-02-04.23:07:36.867 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，支付宝交易凭证号: 2024020422001494750502059906
24-02-04.23:07:36.867 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，商户订单号: 576744878988
24-02-04.23:07:36.867 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，交易金额: 0.01
24-02-04.23:07:36.867 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，买家在支付宝唯一id: 2088722029394752
24-02-04.23:07:36.867 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，买家付款时间: 2024-02-04 23:07:35
24-02-04.23:07:36.867 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，买家付款金额: 0.01
24-02-04.23:07:36.867 [http-nio-8090-exec-3] INFO  SaleController         - 支付回调，支付回调，更新订单 576744878988
24-02-04.23:07:36.879 [http-nio-8090-exec-3] INFO  OrderPaySuccessListener - 支付完成，发货并记录，开始。订单：576744878988
24-02-04.23:08:02.996 [http-nio-8090-exec-6] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"请问有什么需要帮助的吗？","role":"system"},{"content":"请给我介绍一下海贼王","role":"user"}]
24-02-04.23:08:02.997 [http-nio-8090-exec-6] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.23:11:04.020 [http-nio-8090-exec-2] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.context.request.async.AsyncRequestTimeoutException]
24-02-04.23:11:04.020 [http-nio-8090-exec-2] INFO  AbstractChatService    - 流式问答请求完成，使用模型：gpt-3.5-turbo
24-02-04.23:12:46.661 [http-nio-8090-exec-7] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"请问有什么需要帮助的吗？","role":"system"},{"content":"1+1","role":"user"}]
24-02-04.23:12:46.662 [http-nio-8090-exec-7] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.23:13:48.658 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-02-04.23:13:48.665 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-02-04.23:13:52.335 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 7844 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.23:13:52.337 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.23:13:52.911 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.23:13:52.915 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.23:13:52.915 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.23:13:52.915 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.23:13:53.006 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.23:13:53.006 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 645 ms
24-02-04.23:13:53.982 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.23:13:54.018 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.23:13:54.025 [main            ] INFO  Application            - Started Application in 1.951 seconds (JVM running for 2.505)
24-02-04.23:14:11.192 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.23:14:11.192 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.23:14:11.194 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-02-04.23:14:11.460 [http-nio-8090-exec-1] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"请问有什么需要帮助的吗？","role":"system"},{"content":"你好","role":"user"}]
24-02-04.23:14:11.667 [http-nio-8090-exec-1] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.23:14:11.689 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.23:14:11.932 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-02-04.23:17:12.046 [http-nio-8090-exec-8] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.context.request.async.AsyncRequestTimeoutException]
24-02-04.23:17:12.046 [http-nio-8090-exec-8] INFO  AbstractChatService    - 流式问答请求完成，使用模型：gpt-3.5-turbo
24-02-04.23:26:17.436 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-02-04.23:26:17.444 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-02-04.23:26:21.180 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 2228 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.23:26:21.182 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.23:26:21.756 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.23:26:21.760 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.23:26:21.760 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.23:26:21.760 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.23:26:21.844 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.23:26:21.845 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 636 ms
24-02-04.23:26:22.734 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.23:26:22.761 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.23:26:22.767 [main            ] INFO  Application            - Started Application in 1.842 seconds (JVM running for 2.399)
24-02-04.23:28:45.162 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.23:28:45.163 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.23:28:45.165 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-02-04.23:28:45.402 [http-nio-8090-exec-1] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"请问有什么需要帮助的吗？","role":"system"},{"content":"给我介绍一下海贼","role":"user"}]
24-02-04.23:28:45.645 [http-nio-8090-exec-1] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.23:28:45.671 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.23:28:45.947 [http-nio-8090-exec-1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-02-04.23:29:58.630 [http-nio-8090-exec-3] INFO  AbstractChatService    - 流式问答请求完成，使用模型：gpt-3.5-turbo
24-02-04.23:29:58.634 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-02-04.23:29:58.652 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-02-04.23:30:01.085 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 25256 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.23:30:01.087 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.23:30:01.747 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.23:30:01.751 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.23:30:01.751 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.23:30:01.751 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.23:30:01.838 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.23:30:01.838 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 724 ms
24-02-04.23:30:02.868 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.23:30:02.879 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.23:30:02.886 [main            ] INFO  Application            - Started Application in 2.115 seconds (JVM running for 3.14)
24-02-04.23:30:40.579 [http-nio-8090-exec-2] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.23:30:40.579 [http-nio-8090-exec-2] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.23:30:40.580 [http-nio-8090-exec-2] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-02-04.23:30:40.704 [http-nio-8090-exec-2] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"请问有什么需要帮助的吗？","role":"system"},{"content":"给我介绍海贼王","role":"user"}]
24-02-04.23:30:40.826 [http-nio-8090-exec-2] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.23:30:54.391 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.23:30:55.211 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-02-04.23:31:12.962 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-02-04.23:31:12.972 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-02-04.23:31:15.014 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 1672 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.23:31:15.015 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.23:31:15.677 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.23:31:15.682 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.23:31:15.682 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.23:31:15.682 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.23:31:15.770 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.23:31:15.771 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 728 ms
24-02-04.23:31:16.838 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.23:31:16.848 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.23:31:16.853 [main            ] INFO  Application            - Started Application in 2.179 seconds (JVM running for 2.837)
24-02-04.23:31:34.498 [http-nio-8090-exec-2] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.23:31:34.499 [http-nio-8090-exec-2] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.23:31:34.502 [http-nio-8090-exec-2] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-02-04.23:31:34.847 [http-nio-8090-exec-2] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"请问有什么需要帮助的吗？","role":"system"},{"content":"介绍一下库里","role":"user"}]
24-02-04.23:31:35.290 [http-nio-8090-exec-2] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.23:31:50.245 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.23:31:51.118 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-02-04.23:35:34.864 [http-nio-8090-exec-1] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.web.context.request.async.AsyncRequestTimeoutException]
24-02-04.23:35:34.864 [http-nio-8090-exec-1] INFO  AbstractChatService    - 流式问答请求完成，使用模型：gpt-3.5-turbo
24-02-04.23:52:56.484 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-02-04.23:52:56.522 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-02-04.23:55:33.800 [main            ] INFO  Application            - Starting Application using Java 1.8.0_381 on WLY with PID 12068 (D:\Workspace\JavaProject\chatgpt-data\chatgpt-data-app\target\classes started by 王乐岩 in D:\Workspace\JavaProject\chatgpt-data)
24-02-04.23:55:33.802 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-02-04.23:55:34.371 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8090 (http)
24-02-04.23:55:34.375 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8090"]
24-02-04.23:55:34.375 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-02-04.23:55:34.375 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-02-04.23:55:34.452 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-02-04.23:55:34.452 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 627 ms
24-02-04.23:55:35.313 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8090"]
24-02-04.23:55:35.323 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8090 (http) with context path ''
24-02-04.23:55:35.328 [main            ] INFO  Application            - Started Application in 1.819 seconds (JVM running for 2.396)
24-02-04.23:55:49.571 [http-nio-8090-exec-1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-02-04.23:55:49.571 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-02-04.23:55:49.573 [http-nio-8090-exec-1] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-02-04.23:55:49.815 [http-nio-8090-exec-2] INFO  ChatGPTAIServiceController - 流式问答请求开始，使用模型：gpt-3.5-turbo 请求信息：[{"content":"请问有什么需要帮助的吗？","role":"system"},{"content":"jkljlkj","role":"user"}]
24-02-04.23:55:50.040 [http-nio-8090-exec-2] INFO  ChatGPTAIServiceController - 流式问答请求处理，openid:oBzHc6QeSFc39Z_kjTmDqJmUoSgY 请求模型:gpt-3.5-turbo
24-02-04.23:55:50.066 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-02-04.23:55:50.365 [http-nio-8090-exec-2] INFO  HikariDataSource       - HikariPool-1 - Start completed.
